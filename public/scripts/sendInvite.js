/**
 * This file provided by Facebook is for non-commercial testing and evaluation
 * purposes only. Facebook reserves all rights not expressly granted.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * FACEBOOK BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
 * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

var InviteHeader = React.createClass({

  render: function() {
    var child = this.props.childes;
    return (
      <div className="inviteHeader">
        <h2 className="invite-welcome">
          Hello Linda
        </h2>
        <img src="" alt=""/>
        <p>{child}</p>
      </div>
    );
  }
});

var Comment = React.createClass({

  render: function() {
    return (
      <div className="comment">
        <h2 className="commentAuthor">
          {this.props.author}
        </h2>
      </div>
    );
  }
});

var CommentBox = React.createClass({
  loadCommentsFromServer: function() {
    $.ajax({
      url: this.props.url,
      dataType: 'json',
      contentType: "application/json",
      type: 'POST',
      data: JSON.stringify({email : "parent1@gmail.com"}),
      cache: false,
      success: function(data) {
        this.setState({data: data});
      }.bind(this),
      error: function(xhr, status, err) {
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },
  handleCommentSubmit: function(inviteJSON) {
    var comments = this.state.data;
    // Optimistically set an id on the new comment. It will be replaced by an
    // id generated by the server. In a production application you would likely
    // not use Date.now() for this and would have a more robust system in place.
    //comment.id = Date.now();
    //var newComments = comments.concat([comment]);
    //this.setState({data: newComments});
    $.ajax({
      url: "https://sitters-ws.herokuapp.com/insertInvite",
      dataType: 'json',
      type: 'POST',
      contentType: 'application/json',
      headers: {
        'Access-Control-Allow-Origin': '*'
      },
      data: inviteJSON,
      crossDomain: true,
      success: function(data) {
        //this.setState({data: data});
        console.log('yoelllll');
      }.bind(this),
      error: function(xhr, status, err) {
        console.log(err);
       // this.setState({data: comments});
        console.error(this.props.url, status, err.toString());
      }.bind(this)
    });
  },
  getInitialState: function() {
    return {data: []};
  },
  componentDidMount: function() {
    this.loadCommentsFromServer();
    setInterval(this.loadCommentsFromServer, this.props.pollInterval);
  },
  render: function() {
    return (
      <div className="commentBox">
        <SittersList data={this.state.data} />
        <CommentForm onCommentSubmit={this.handleCommentSubmit} />
      </div>
    );
  }
});

var SittersList = React.createClass({
  render: function() {
    // var sittersNodes = this.props.data.map(function(sitter) {
    return (
      <InviteHeader></InviteHeader>
    );
    // });
    return (
      <div className="sittersList">
        {sittersNodes}
      </div>
    );
  }
});

var CommentForm = React.createClass({
  getInitialState: function() {
    return {author: '', text: ''};
  },
  handleAuthorChange: function(e) {
    this.setState({author: e.target.value});
  },
  handleDateChange : function(e){
    this.setState({date: e.target.value});
  },
  handleTimeChange : function(e){
    this.setState({time: e.target.value});
  },
  handleLocationChange : function(e){
    this.setState({location: e.target.value});
  },
  handleReoccurringNoneChange : function(e){
    this.setState({none: e.target.value});
  },
  handleReoccurringWeeklyChange : function(e){
    this.setState({weekly: e.target.value});
  },
  handleReoccurringMonthlyChange : function(e){
    this.setState({monthly: e.target.value});
  },

  handleAllergiesChange : function(e){
    this.setState({allergies: e.target.value});
  },
  handleReviewTextChange : function(e){
    this.setState({reviewText: e.target.value});
  },
  handleTextChange: function(e) {
    this.setState({text: e.target.value});
  },
  handleSubmit: function(e) {
    e.preventDefault();
    var parentEmail = "parent1@gmail.com";
    var sitterEmail = "sitter1@gmail.com";
    var location = this.state.location.trim();
    //var date = this.state.date.trim();
    var time = this.state.time.trim();
    // var none = this.state.none.trim();
    // var weekly = this.state.weekly.trim();
    // var monthly = this.state.monthly.trim();
    // var reoccurring;
    // if(!none){
    //   if(!weekly){
    //     reoccurring = monthly;
    //   }
    //   else
    //     reoccurring = weekly;
    // }
    // else
    //   reoccurring = none;
    var endTime = time + 2;
    var allergies = this.state.allergies.trim();

    var inviteJSON = {
      "sitterEmail": sitterEmail,
      "parentEmail": parentEmail,
      "street": location,
      "date": "dev1097",
      "recurring": "Weekly",
      "startTime": time,
      "endTime": endTime,
      "allergies": [
        allergies
      ],
      "status": "Waiting"
    };
    this.props.onCommentSubmit(inviteJSON);
   // this.setState({author: '', text: ''});
  },
  render: function() {
    return (
      <form className="commentForm" onSubmit={this.handleSubmit}>
        <table class="tableInfo">
          <thead>
          <th class="icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 125"><path fill="#f7a1a1" d="M34.4 52.6c0 0.8-0.6 1.5-1.4 1.5h-2.7c-0.8 0-1.4-0.7-1.4-1.5v-2.6c0-0.8 0.6-1.5 1.4-1.5h2.7c0.8 0 1.4 0.7 1.4 1.5V52.6zM34.4 59.2c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V59.2zM34.4 68.4c0-0.8-0.6-1.4-1.4-1.4h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V68.4zM43.6 50.1c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V50.1zM43.6 59.2c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V59.2zM43.6 68.4c0-0.8-0.6-1.4-1.4-1.4h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V68.4zM52.7 50.1c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V50.1zM52.7 59.2c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V59.2zM52.7 68.4c0-0.8-0.6-1.4-1.4-1.4h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V68.4zM61.9 50.1c0-0.8-0.6-1.5-1.4-1.5H57.8c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V50.1zM61.9 59.2c0-0.8-0.6-1.5-1.4-1.5H57.8c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V59.2zM61.9 68.4c0-0.8-0.6-1.4-1.4-1.4H57.8c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V68.4zM71.1 50.1c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V50.1zM71.1 59.2c0-0.8-0.6-1.5-1.4-1.5h-2.7c-0.8 0-1.4 0.7-1.4 1.5v2.6c0 0.8 0.6 1.5 1.4 1.5h2.7c0.8 0 1.4-0.7 1.4-1.5V59.2zM81 28.6v48.9c0 2.6-2.1 4.7-4.7 4.7H23.7c-2.6 0-4.7-2.1-4.7-4.7V28.6c0-2.6 2.1-4.7 4.7-4.7h6.3V19.5c0-1 0.8-1.7 1.8-1.7s1.8 0.8 1.8 1.8v4.4h33V19.5c0-1 0.8-1.7 1.8-1.7s1.8 0.8 1.8 1.8v4.4h6.3C78.9 23.9 81 26 81 28.6zM22.5 28.6v10h55V28.6c0-0.7-0.6-1.2-1.2-1.2h-6.3v3.9c0 1-0.8 1.8-1.7 1.8s-1.7-0.8-1.7-1.7v-3.9H33.5v3.9c0 1-0.8 1.8-1.7 1.8s-1.7-0.8-1.7-1.7v-3.9h-6.3C23 27.4 22.5 28 22.5 28.6zM77.5 77.5V42.2H22.5v35.4c0 0.7 0.6 1.2 1.2 1.2h52.6C77 78.8 77.5 78.2 77.5 77.5z"/></svg>
          </th>
          <th class="icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 125"><path fill="#f7a1a1" d="M50 13c20.4 0 37 16.6 37 37S70.4 87 50 87 13 70.4 13 50 29.6 13 50 13M50 5C25.1 5 5 25.1 5 50s20.1 45 45 45 45-20.1 45-45S74.9 5 50 5L50 5z"/><path fill="#f7a1a1" d="M67.3 49H51.9V31.6c0-2.2-1.8-4-4-4s-4 1.8-4 4V51c0 0.4 0.1 0.7 0.1 1 -0.1 0.3-0.1 0.7-0.1 1 0 2.2 1.8 4 4 4h19.4c2.2 0 4-1.8 4-4S69.5 49 67.3 49z"/></svg>
          </th>
          <th class="icon">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 40"><path fill="#f7a1a1" d="M16 31.3L16 31.3c-0.2 0-0.5-0.1-0.6-0.3C15 30.4 5.5 16.9 5.5 11.3 5.5 5.5 10.2 0.8 16 0.8c5.8 0 10.5 4.7 10.5 10.5 0 5.6-9.5 19.1-9.9 19.6C16.5 31.1 16.2 31.3 16 31.3zM16 2.3c-5 0-9 4.1-9 9 0 4.3 6.9 14.8 9 17.9 2.1-3.1 9-13.6 9-17.9C25 6.3 21 2.3 16 2.3z"/><path fill="#f7a1a1" d="M16 15.4c-2.6 0-4.7-2.1-4.7-4.7C11.3 8.1 13.4 6 16 6c2.6 0 4.7 2.1 4.7 4.7C20.7 13.3 18.6 15.4 16 15.4zM16 7.5c-1.8 0-3.2 1.4-3.2 3.2 0 1.8 1.4 3.2 3.2 3.2 1.8 0 3.2-1.4 3.2-3.2C19.2 8.9 17.7 7.5 16 7.5z"/></svg>
          </th>
          </thead>
          <tbody>
          <tr class="middleRow">
            <td><label>Date <input type="date" value={this.state.date} onChange={this.handleDateChange}/> </label></td>
            <td><label>Time <input type="time" value={this.state.time} onChange={this.handleTimeChange}/> </label></td>
            <td><label>Location <input type="text" placeholder="Arlozorov 52 Tel Aviv" value={this.state.location} onChange={this.handleLocationChange}/></label></td>
          </tr>
          </tbody>
        </table>
        <label>Reoccurring</label>
        <label className="radio-inline"><input defaultChecked="true"  type="radio" name="reoccurring"  value="none"/>None</label>
        <label className="radio-inline"><input  type="radio" name="reoccurring"  value="weekly"/>Weekly</label>
        <label className="radio-inline"><input  type="radio" name="reoccurring"  value="monthly"/>Monthly</label> <br></br>

        <textarea name="allergies" placeholder="enter allergy details" id="aller" cols="1" rows="1" ></textarea> <br></br>
        <textarea name="message" placeholder="write a personal message" id="msg" cols="1" rows="10" value={this.state.reviewText} onChange={this.handleReviewTextChange}></textarea> <br></br>

        <input className="submit" type="submit" value="Send Invitation" />
      </form>
    );
  }
});

ReactDOM.render(
  <CommentBox url="https://sitters-ws.herokuapp.com/getParentByEmail/" pollInterval={2000} />,
  document.getElementById('content')
);
